// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: file.sql

package sql

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createFile = `-- name: CreateFile :one
INSERT INTO
    files (
        object_name,
        original_name,
        original_format
    )
VALUES ($1, $2, $3)
RETURNING
    id, object_name, original_name, original_format, created_at, updated_at
`

type CreateFileParams struct {
	ObjectName     pgtype.UUID
	OriginalName   string
	OriginalFormat string
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (File, error) {
	row := q.db.QueryRow(ctx, createFile, arg.ObjectName, arg.OriginalName, arg.OriginalFormat)
	var i File
	err := row.Scan(
		&i.ID,
		&i.ObjectName,
		&i.OriginalName,
		&i.OriginalFormat,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getFileByID = `-- name: GetFileByID :one
SELECT id, object_name, original_name, original_format, created_at, updated_at FROM files WHERE id = $1
`

func (q *Queries) GetFileByID(ctx context.Context, id int32) (File, error) {
	row := q.db.QueryRow(ctx, getFileByID, id)
	var i File
	err := row.Scan(
		&i.ID,
		&i.ObjectName,
		&i.OriginalName,
		&i.OriginalFormat,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
